#include "SerialMP3Player.h"
#include <Adafruit_NeoPixel.h>

#define TX 11
#define RX 10

#define TE 8
#define RE 9

SerialMP3Player mp3(RX, TX);
SerialMP3Player mp3_2 (RE, TE);


// Which pin on the Arduino is connected to the Neomachine?
#define PIN   2
// How many Neomachine are attached to the Arduino?
#define NUMmachine 100 // Popular NeoPixel ring size
Adafruit_NeoPixel machine(NUMmachine, PIN, NEO_GRB + NEO_KHZ800);

const int startbutton = 33 ;
const int emergency_stop = 32 ;
const int resetButton = 31 ;
const int dooropen = 30;

const int scene1 = 36;
const int scene2 = 35;
const int scene3 = 34;
const int scene4 = 37;
const int scene5 = 38;
const int scene6 = 39;

bool buttonState = false;
bool lastButtonState = false;
int buttonPressCount = 0;

bool doorisopen = false;
bool doorisclosed = false;
bool emergency = false;
bool machine_on = false;
bool machine_running = false;
bool steam_on = false;

unsigned long previousMillis = 0;
const long time1 = 8000;


void console_flickr() {

}

void setup() {

  Serial.begin(9600);
  mp3.begin(9600);        // start mp3-communication
  mp3_2.begin(9600);        // start mp3-communication
  delay(500);             // wait for init
  mp3.sendCommand(CMD_SEL_DEV, 0, 2);   //select sd-card
  mp3.setVol(30);
  mp3.stop();
  mp3_2.sendCommand(CMD_SEL_DEV, 0, 2);   //select sd-card
  mp3_2.setVol(30);
  mp3_2.stop();
  Serial.println("Twins of Evil Attractions  - The Chamber 2024");
  pinMode(startbutton, INPUT_PULLUP); // set the button pin as an input
  pinMode (dooropen, INPUT_PULLUP); // define the button pin
  pinMode  (emergency_stop,  INPUT_PULLUP); // define the button pin
  pinMode  (resetButton ,  INPUT_PULLUP); // define the button pin
  pinMode  (scene1,  INPUT_PULLUP); // define the button pin
  pinMode  (scene2,  INPUT_PULLUP); // define the button pin
  pinMode  (scene3,  INPUT_PULLUP); // define the button pin
  pinMode  (scene4,  INPUT_PULLUP); // define the button pin
  pinMode  (scene5,  INPUT_PULLUP); // define the button pin
  pinMode  (scene6,  INPUT_PULLUP); // define the button pin
  machine.begin(); // initialize the NeoPixel strip
  machine.clear(); // initialize the NeoPixel strip


}

void loop() {
  unsigned long currentMillis = millis();
  if (digitalRead(emergency_stop) == LOW) {
    Serial.println("EMERGENCY CONDITIONS");
    mp3.stop();
    emergency = true;
    machine_running = false;
    for (int i = 0; i < 10; i++) {
      machine.setPixelColor(i, 255, 255, 255); // Set the pixel color
      machine.show(); // Update the NeoPixel strip

    }
  } else
    emergency = false;

  if (digitalRead(resetButton) == LOW) {
    mp3.stop();
    machine.clear(); // initialize the NeoPixel strip
    machine.show();
    machine.setPixelColor(0, 255, 150, 0); // Set the pixel color
    machine.show();
    Serial.println("machine reset");
    machine_running = false;
  }

  buttonState = digitalRead(dooropen);
  if (buttonState != lastButtonState && buttonState == LOW) {
    buttonPressCount++;
    switch (buttonPressCount) {
      case 1:
        mp3_2.play(1);    //open
        Serial.println("door open");
        doorisopen = true;
        doorisclosed = false;
        if (machine_on)
          mp3.stop();
        break;
      case 2:
        mp3_2.play(2);  // closed
        Serial.println("door closed");
        doorisclosed = true;
        doorisopen = false;
        break;
      default:
        buttonPressCount = 0;
        break;
    }
  }
  lastButtonState = buttonState;
  if (doorisopen) {

    machine.setPixelColor(1, 0, 255, 0); // Set the pixel color
    machine.setPixelColor(2, 0, 255, 0); // Set the pixel color
    machine.setPixelColor(3, 0, 255, 0); // Set the pixel color
    machine.setPixelColor(4, 0, 255, 0); // Set the pixel color

  }

  if (doorisclosed) {
    machine.setPixelColor(0, 0, 0, 0); // Set the pixel color
    machine.setPixelColor(1, 255, 0, 0); // Set the pixel color
    machine.setPixelColor(2, 255, 0, 0); // Set the pixel color
    machine.setPixelColor(3, 255, 0, 0); // Set the pixel color
    machine.setPixelColor(4, 255, 0, 0); // Set the pixel color

  }
  machine.show();


  if (digitalRead(startbutton) == LOW) {
    mp3.play(1);
    machine_on = true;
    machine_running = false;
    Serial.println("machine booting up");
    machine.setPixelColor(1, 0, 255, 0); // Set the pixel color
    machine.setPixelColor(2, 0, 255, 0); // Set the pixel color
    machine.setPixelColor(3, 0, 255, 0); // Set the pixel color
    machine.setPixelColor(4, 0, 255, 0); // Set the pixel color



  }
//  else {
//    machine_on = false;
 // }

  if ((digitalRead(scene1) == LOW) && (doorisclosed)) {
    machine_running = true;
    Serial.println("scene 1");
    mp3.play(2);

    if (currentMillis - previousMillis >= time1) {
      previousMillis = currentMillis;
      Serial.println("steam on");
      machine.setPixelColor(5, 255, 255, 255); // Set the pixel color
    }
  }



}
